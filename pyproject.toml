[tool.poetry]
name = "career_tool"
version = "1.0.0"
description = "This is a template example for creating internal Python Packages"
authors = ["samet <samet@gmail.com>"]

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
typed-ast = "^1.5.4"
pypdf2 = "^3.0.1"
urllib3 = "<2.0.0"
openai = "^0.27.7"
pypandoc = "^1.11"
docx2txt = "^0.8"
flask = "^2.3.2"
google-cloud-storage = "^2.9.0"
google-auth = "^2.19.1"
google-cloud-secret-manager = "^2.16.1"
psycopg2 = "^2.9.6"
opencv-python = "^4.8.0.76"
wordcloud = "^1.9.2"
langchain = "^0.1.0"
flask-cors = "^4.0.0"
python-dotenv = "^1.0.0"
orjson = "^3.9.10"
beautifulsoup4 = "^4.12.2"
google-generativeai = "^0.2.2"
google-cloud-aiplatform = "^1.36.1"

[tool.poetry.group.dev.dependencies]
matplotlib = "^3.7.3"
black = "^23.3.0"
ruff = "^0.1.0"
pytest = "^6.1.2"
pytest-cov = "^2.10.1"
isort = "^5.6.4"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 80
target-version = ["py38"]
exclude = '''
/(
    \.git
  | \.venv
  | \.direnv
  | _build
  | build
  | dist
  | \.env
  | \.vscode
  | \.cache
  | github
  | __pycache__
  | .cloudignore
)/
'''

[tool.isort]
py_version = "38"
line_length = 80
lines_after_imports = 2
lines_between_sections = 1
multi_line_output = 3
force_grid_wrap = 0
include_trailing_comma = "true"
combine_as_imports = "true"
use_parentheses = "true"
skip = ["./docs", ".direnv"]
skip_glob = ["*/__init__.py"]
skip_gitignore = "true"
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
default_section = "THIRDPARTY"

[tool.pytest.ini_options]
minversion = "6.1"
addopts = "--cov"
testpaths = [
    "tests_unit",
]
